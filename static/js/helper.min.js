!(function (window) {
  window.getreCAPTCHAToken = function (action, callback) {
    grecaptcha.ready(function () {
      grecaptcha.execute('6LdnvOwlAAAAAPSoLOWDgvJsG3J4OrKfLxkxrXWW', { action: `${action}` }).then((token) => {
        callback(token);
      });
    });
  };

  window.getCookie = function (name) {
    const value = undefined,
      parts = ("; " + document.cookie).split(`; ${name}=`);
    if (2 === parts.length) return parts.pop().split(";").shift();
  };

  window.requestsPOST = function (url, headers = {}, formData = new FormData(), callback, progressCallback, useFetch = false) {
    let startTime = new Date();

    headers = Object.assign({
        'X-CSRFToken': getCookie('csrftoken'),
    }, headers);

    if (useFetch) {
        // Use fetch API
        fetch(url, {
            method: 'POST',
            headers: headers,
            body: formData,
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            let endTime = new Date();
            let timeDiff = endTime - startTime; // in ms
            callback(null, data, `Completed in ${timeDiff}ms`);
        })
        .catch(error => callback(error, null));
    } else {
        // Use XHR
        var xhr = new XMLHttpRequest();
        xhr.open('POST', url, true); // Always async
        Object.keys(headers).forEach(key => xhr.setRequestHeader(key, headers[key]));
        xhr.onload = function () {
            if (xhr.status >= 200 && xhr.status < 300) {
                let endTime = new Date();
                let timeDiff = endTime - startTime; // in ms
                callback(null, JSON.parse(xhr.responseText), `Completed in ${timeDiff}ms`);
            } else {
                callback(new Error(xhr.statusText), null);
            }
        };
        xhr.onerror = function () {
            callback(new Error(xhr.statusText), null);
        };
        xhr.onprogress = function (event) {
            if (event.lengthComputable) {
                var percentComplete = event.loaded / event.total * 100;
                progressCallback(percentComplete);
            } else {
                var counter = 0;
                var timer = setInterval(function() {
                    counter += 10;
                    progressCallback(counter);
                    if(counter >= 100) clearInterval(timer);
                }, 100);
            }
        };
        xhr.send(formData);
    }
};

//** GENERIC FUNCTIONS */

window.getEmails = function (name, successCallback, errorCallback) {
  const url = name ? `/tools/get_emails/?name=${name}` : '/tools/get_emails/';
  const headers = {
    'Accept': 'application/json',
    'Content-Type': 'application/json',
  };
  const formData = new FormData();
  
  requestsPOST(
    url, 
    headers,
    formData,
    function(error, data, timeDiff) {
      if (error) {
          errorCallback();
          showToast('error', error);
      } else {
          if(data.success){
            successCallback(data.emails[0]);
            showToast('success', timeDiff, 700);
          } else {
            errorCallback();
            showToast('error', data.error);
          }
      }
    },
    function(progress) {/* NOTE: Fetch API doesn't support progress updates as of September 2021. */},
    true // it's a Fetch API
  );
};

window.saveEmails = function (name, emails, successCallback, errorCallback, progressCallback, useFetch) {
  const url = '/tools/save_emails/';
  const headers = {
    'Accept': 'application/json',
  };
  const formData = new FormData();
  formData.append('name', name);
  formData.append('emails', JSON.stringify(emails));

  requestsPOST(
    url, 
    headers,
    formData,
    function(error, data, timeDiff) {
      if (error) {
          errorCallback();
          showToast('error', error);
      } else {
          if(data.success){
            successCallback();
            showToast('success', timeDiff, 700);
          } else {
            errorCallback();
            showToast('error', data.error);
          }
      }
    },
    function(progress) {
      progressCallback(progress);
    },
    useFetch
  );
};

window.getAllEmailNames = function(successCallback, errorCallback) {
  let url = '/tools/get_email_names/?' + new Date().getTime();
  let headers = {
    'Cache-Control': 'no-cache, no-store, must-revalidate',
    'Pragma': 'no-cache',
    'Expires': '0',
  };
  const formData = new FormData();
  
  requestsPOST(
    url, 
    headers,
    formData,
    function(error, data, timeDiff) {
      if (error) {
          errorCallback();
          showToast('error', error);
      } else {
          if(data.success){
            successCallback(data.names);
            showToast('success', timeDiff, 700);
          } else {
            errorCallback();
            showToast('error', data.error);
          }
      }
    },
    function(progress) {/* NOTE: Fetch API doesn't support progress updates as of September 2021. */},
    true
  );
};

//** END OF GENERIC FUNCTIONS */
})(window);